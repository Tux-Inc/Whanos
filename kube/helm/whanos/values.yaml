jenkins:
  controller:
    # When enabling LDAP or another non-Jenkins identity source, the built-in admin account will no longer exist.
    # If you disable the non-Jenkins identity store and instead use the Jenkins internal one,
    # you should revert controller.adminUser to your preferred admin user:
    adminUser: "admin"
    adminPassword: "admin"
    # The port the service listens on (32000 for NodePort, 8080 for LoadBalancer and ClusterIP)
    servicePort: 32000
    # For minikube, set this to NodePort, elsewhere use LoadBalancer
    # Use ClusterIP if your setup includes ingress controller
    serviceType: NodePort

    installPlugins:
      - kubernetes:4029.v5712230ccb_f8
      - workflow-aggregator:596.v8c21c963d92d
      - git:5.2.0
      - configuration-as-code:1670.v564dc8b_982d0

    # List of plugins to install in addition to those listed in controller.installPlugins
    additionalPlugins:
      - role-strategy:689.v731678c3e0eb_
      - job-dsl:1.87
      - parameterized-trigger:2.46
      - github:1.37.3.1
      - credentials:1309.v8835d63eb_d8a_
      - ws-cleanup:0.45

    additionalSecrets:
      - name: "jenkins-ssh-key-private"
        value: "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEArdFAYpdEiyUtXh9XOazgWd1osTYighf+3BTa3Y6SQUOAn3NPPE1e\nEqlw7XGvf+gyeAnUjUgO3ZtZj3Dq23Z04jfUe+Tw7Em8184dJUKWGUZ4UVTQe2hNrkNNvh\n3iq2biLh0fyJi2cQ0TOMevHZOufmExKdxt8WgjB6TOAq/FW1W/+a2pOpFqsKz4I7he5wYd\nI4XyC98Ge7uF7LzNCdGNhcx0TaG34U2KhPZYiR0X9x1CdO5I1MFWDYaYieaNVDzXsrdbLC\nc5PD+iaOD8uefhMT/2J0hOROENFWmXIMpyRge9ETyC1ttwoh+5FlXQpmX32/t5ghnRfHyU\ntrePo09kpQicTmTHCP8h/wAU3wl6JsFZIzdTeS+u1H9uiUbYHaaayoZjI9Fm9tlF1GE70h\nV7m2nE5ibRijQEE57UzyNh3ZEQtXjD+fmLcShn4Y4qZlDN3zRRB5Dqd+fYN0BNTcBWfaaM\n2/1E8rc/CVtU2Hhvsis09DwIjgnORLEETPSCruGbAAAFmMoZi8zKGYvMAAAAB3NzaC1yc2\nEAAAGBAK3RQGKXRIslLV4fVzms4FndaLE2IoIX/twU2t2OkkFDgJ9zTzxNXhKpcO1xr3/o\nMngJ1I1IDt2bWY9w6tt2dOI31Hvk8OxJvNfOHSVClhlGeFFU0HtoTa5DTb4d4qtm4i4dH8\niYtnENEzjHrx2Trn5hMSncbfFoIwekzgKvxVtVv/mtqTqRarCs+CO4XucGHSOF8gvfBnu7\nhey8zQnRjYXMdE2ht+FNioT2WIkdF/cdQnTuSNTBVg2GmInmjVQ817K3WywnOTw/omjg/L\nnn4TE/9idITkThDRVplyDKckYHvRE8gtbbcKIfuRZV0KZl99v7eYIZ0Xx8lLa3j6NPZKUI\nnE5kxwj/If8AFN8JeibBWSM3U3kvrtR/bolG2B2mmsqGYyPRZvbZRdRhO9IVe5tpxOYm0Y\no0BBOe1M8jYd2RELV4w/n5i3EoZ+GOKmZQzd80UQeQ6nfn2DdATU3AVn2mjNv9RPK3Pwlb\nVNh4b7IrNPQ8CI4JzkSxBEz0gq7hmwAAAAMBAAEAAAGAXyfdHZw+VAaoTYzOza5MrCW/+L\nPwNFQ6m/V21DAG9V+k/KW9zP917rWAMx03vMg7SOfoyueV68/uOc7RZA/3cRirZKAzHMhJ\nb8NQxWMslO21VKEf+U9ip3IFD32A5+DNFf2vtruTtVQ5H66Bualtr5Y5ufcI4U3nT3nzph\njf7F6HWIKv0HZneA1ZUwTOP59jOF1N4x3XiMliSfYaMbPczFDfothTuC4hFSVf1sBsrEYC\nac1BZefp2kHDJEtpN6KOc9HpBkn5Vnl4KAlMFXUMp6UW/15o6cba6KQuwZbhwPEZBOydnP\nV2DigApZyEb7OI5jx7Pbn+muj59vQRzieD9WTmnPqzIODzMzXunkZPeLy4BXfv/YM0PThq\nhgcypdzyoEdaBqQwnj5fpBAenD7Zn1ogi79Rt8rZGdHuGSRDCiQdG2c07gf+AhbJ7P53hH\nD1AtJZRT2ocbpkig85b55rZlYsmP0hRjixN72Ogpa476zTFujuJ2cGyGBL/OkRwBSBAAAA\nwBhTwjBiXZnDNVrkaZ7yWKVB0b3jgZw+QYRlncTQ/hi3OyVgIo7VzTroU0S8ybGYKFQyg5\n/ClhQwyhgYtA1iLKnQH/AJiVveh3zaiRO9GL+TxSjKqS+P4HLzm0PzVu6mGVKcVQidOelA\nkd0muBKIvN0/+gTnMO3pdoenkvowv1ltt+/OGTjwpnHnGbvpLBI/8TlXXc0V6H4fkjA/DU\nlZ7k3mF+XAyIwCvbZJcoc6aZ9EWgBLww9BUe+uvf5ri18d9AAAAMEA3+6ERa0fyf8g+YFa\niq+sqL0MG7I1tdfBG0O9UohXXsZtzowsPfg9yKzBp8L8DiH9GdNmkqWRfU7wH/94QfwYSf\nhHIa7B7ucId+52coW2WzYsU0lKpDPKpDgI4d75uGDDd0ItCp+1kRURYaJOBaphskU4liLq\nmvj7uZgGh738bd9PdtnJUaYHpHdR7IDLFuBwMVq8QTh05B6QXk71RqZAISONba6hJmFW0v\npEOhS9+Pdmibu35GwpWYI8oOFm+cr7AAAAwQDGtYLUs/R7dwsUD1xTFnRYqffexEJexlzk\nMSD9LrdPaPfEdC8Vwv84noO+OUDvfNCiH52AUfvkH875DrVW9Jy09lw1/eZsVb+B864tWL\nKxA2Y4sMKuhCYO/saiNpZr5bJbDu/jHw+UjXa3u0VU5/SbIJTj3AUF8gDwwmhO1BeEG3oJ\nsG3/cQpXkT98dodRjC7m1kFlCsXA+afxO6PesErQjIJ0gKgG41Ui/oKutMh3yagAYpFOUY\nYKmU6pzE6hgeEAAAAjbmVwdG9zQE1hY0Jvb2stUHJvLWRlLUd3ZW5hZWwubG9jYWw=\n-----END OPENSSH PRIVATE KEY-----"

    JCasC:
      defaultConfig: true
      configScripts:
        welcome-message: |
          jenkins:
            systemMessage: Welcome to our CI\CD server. This Jenkins is Whanos-powered instance!.
        credentials-config: |
          credentials:
            system:
              domainCredentials:
                - credentials:
                    - basicSSHUserPrivateKey:
                        scope: GLOBAL
                        id: "jenkins-ssh-key"
                        username: "git"
                        description: "SSH key for git"
                        privateKeySource:
                          directEntry:
                            privateKey: ${jenkins-ssh-key-private}
        security-global: |
          security:
            globalJobDslSecurityConfiguration:
              useScriptSecurity: false
            gitHostKeyVerificationConfiguration:
              sshHostKeyVerificationStrategy:
                manuallyProvidedKeyVerificationStrategy:
                  approvedHostKeys: |-
                    bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
                    git.assembla.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN+whKLd9tzS4IIbZD7rCgly2LNxlvxef4JvwSaL/YZ7
                    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
                    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
        job-config: |
          jobs:
            - script: |
                import java.io.File

                def cloneRepo() {
                    def workspace = new File('/tmp/whanos_repo')
                    def cloneCommand = "git clone https://github.com/Tux-Inc/Whanos.git /tmp/whanos_repo"
                    def process = cloneCommand.execute()
                    process.waitFor()
                    if (process.exitValue() != 0) {
                        println "Error cloning repository: " + process.err.text
                        return null
                    }
                    return new File(workspace, "images")
                }

                cloneRepo()

            - file: /tmp/whanos_repo/jenkins/job_dsl.groovy

  agent:
    privileged: true
    runAsUser: 0
    runAsGroup: 0
    volumes:
      - type: HostPath
        hostPath: /var/run/docker.sock
        mountPath: /var/run/docker.sock
      - type: HostPath
        hostPath: /whanos
        mountPath: /whanos
    envVars:
      - name: DOCKER_REGISTRY
        value: "whanos-registry.local"
